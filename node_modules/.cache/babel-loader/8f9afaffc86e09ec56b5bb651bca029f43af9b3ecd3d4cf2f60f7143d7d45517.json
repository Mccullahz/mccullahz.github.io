{"ast":null,"code":"export const contentRegistry = [{\n  /*\tThis setup is pretty straight forward, but\n   * \ttype: is used to differentiate between templates and projects, this changes what page the content is displayed on\n   *  \tslug: is used to create the URL for the page, so it should be unique and descriptive for each item\n   *  \ttitle: is the main title of the content item, displayed prominently on the card and the page\n   *  \tsubtitle: is the secondary heading, only displayed on the card\n   *  \ttechnologies: is an array of strings representing the technologies used, displayed on the card\n   *  \tlinks: is an object containing optional links, shown on the card only\n   *  \tcontent: is the main content of the item, displayed on the page, TODO: setup nicer rendering for these links\n   *\n   * */\n\n  type: \"template\",\n  slug: \"sow-template\",\n  title: \"Statement of Work - SOW Template\",\n  subtitle: \"A straightforward template to organize solo dev projects.\",\n  technologies: [\"Markdown\", \"PDF Download\"],\n  links: {\n    github: \"https://github.com/yourname/sow-template\"\n  },\n  content: `\n### Overview\n\nThis is a simple template for a **Statement of Work (SOW)** document.\n\n#### Features\n- Clear sections for scope, objectives, and deliverables\n- Lightweight Markdown formatting\n- Ideal for solo developers and small teams\n\n#### Markdown Format Doc\n\n\\`\\`\\`markdown\n## INSERT FILE \n\\`\\`\\`\n    `\n}, {\n  type: \"project\",\n  slug: \"job-scraper-cli\",\n  title: \"Job Scraper CLI\",\n  subtitle: \"Scrapes business websites near a ZIP code for job pages.\",\n  technologies: [\"Go\", \"CLI\", \"Web Scraping\"],\n  links: {\n    github: \"https://github.com/yourname/job-scraper-cli\"\n  },\n  content: `Job Scraper CLI is a Go-powered command-line application that finds nearby business websites \nand searches them for career or job listing pages. The goal is to automate localized job hunting \nby surfacing hiring pages often buried in small-business websites.`\n}];\nexport function getContentBySlug(slug) {\n  return contentRegistry.find(item => item.slug === slug);\n}","map":{"version":3,"names":["contentRegistry","type","slug","title","subtitle","technologies","links","github","content","getContentBySlug","find","item"],"sources":["/home/zyguythearchguy/code/mccullahz.github.io/src/data/ContentReg.tsx"],"sourcesContent":["export type ContentItem = {\n  slug: string;\n  title: string;\n  subtitle?: string;\n  technologies?: string[];\n  links?: {\n    github?: string;\n    demo?: string;\n    download?: string;\n  };\n  content: string;\n  type: \"template\" | \"project\";\n};\n\nexport const contentRegistry: ContentItem[] = [\n  {\n/*\tThis setup is pretty straight forward, but\n * \ttype: is used to differentiate between templates and projects, this changes what page the content is displayed on\n *  \tslug: is used to create the URL for the page, so it should be unique and descriptive for each item\n *  \ttitle: is the main title of the content item, displayed prominently on the card and the page\n *  \tsubtitle: is the secondary heading, only displayed on the card\n *  \ttechnologies: is an array of strings representing the technologies used, displayed on the card\n *  \tlinks: is an object containing optional links, shown on the card only\n *  \tcontent: is the main content of the item, displayed on the page, TODO: setup nicer rendering for these links\n *\n * */\n\n    type: \"template\",\n    slug: \"sow-template\",\n    title: \"Statement of Work - SOW Template\",\n    subtitle: \"A straightforward template to organize solo dev projects.\",\n    technologies: [\"Markdown\", \"PDF Download\"],\n    links: {\n      github: \"https://github.com/yourname/sow-template\",\n    },\n    content: `\n### Overview\n\nThis is a simple template for a **Statement of Work (SOW)** document.\n\n#### Features\n- Clear sections for scope, objectives, and deliverables\n- Lightweight Markdown formatting\n- Ideal for solo developers and small teams\n\n#### Markdown Format Doc\n\n\\`\\`\\`markdown\n## INSERT FILE \n\\`\\`\\`\n    `,\n  },\n\n\n  {\n    type: \"project\",\n    slug: \"job-scraper-cli\",\n    title: \"Job Scraper CLI\",\n    subtitle: \"Scrapes business websites near a ZIP code for job pages.\",\n    technologies: [\"Go\", \"CLI\", \"Web Scraping\"],\n    links: {\n      github: \"https://github.com/yourname/job-scraper-cli\",\n    },\n    content: `Job Scraper CLI is a Go-powered command-line application that finds nearby business websites \nand searches them for career or job listing pages. The goal is to automate localized job hunting \nby surfacing hiring pages often buried in small-business websites.`,\n  },\n\n\n];\n\nexport function getContentBySlug(slug: string): ContentItem | undefined {\n  return contentRegistry.find((item) => item.slug === slug);\n}\n\n"],"mappings":"AAcA,OAAO,MAAMA,eAA8B,GAAG,CAC5C;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEIC,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,kCAAkC;EACzCC,QAAQ,EAAE,2DAA2D;EACrEC,YAAY,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC;EAC1CC,KAAK,EAAE;IACLC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EAGD;EACEP,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,iBAAiB;EACxBC,QAAQ,EAAE,0DAA0D;EACpEC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC;EAC3CC,KAAK,EAAE;IACLC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;AACb;AACA;AACE,CAAC,CAGF;AAED,OAAO,SAASC,gBAAgBA,CAACP,IAAY,EAA2B;EACtE,OAAOF,eAAe,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACT,IAAI,KAAKA,IAAI,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}